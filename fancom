#!/bin/bash

# Are we in Git repository?
if [[ -d .git ]]; then
  # configure variables with default values,
  # then override those values if in config file
  mainbranch=$(git rev-parse --abbrev-ref HEAD)
  reponame=$(basename $(git rev-parse --show-toplevel))
  devsuffix="temp"
  emoji=0
  addall=0
  commitforce=0
  pushforce=0
  branchinprefix=0
  prefix=""
  uppercaseprefix=1
  noprefix=0
  opencompare=1
  pushtotemp=1
  comparewith=""

  # not actually an author, more like a github username
  # get it from ssh address (like git@github.com:michalbe/fancom.git)
  author=$(git config --get remote.origin.url)
  author=${author#*:}
  author=${author%%/*}

  # and if it's not there, try regular URL
  # (like https://github.com/michalbe/fancom.git)
  if [[ $author == "" ]]; then
    author=${author#*.com/}
    author=${author%%/*}
  fi

  # Check if there is fancom config file:
  if [[ -f .fancom ]]; then
    # execute config file
    source $PWD/.fancom
  fi

  # If the flag is set to `1`, add all the changes in the repo
  if [[ $addall == 1 ]]; then
    git add --all
  fi

  if [[ $noprefix == 1 ]]; then
    # we don't need any prefix.
    # even if `prefix` var has any value `noprefix`
    # option has higher priority
    commitmsg=""

  elif [[ $prefix && $noprefix == 0 ]]; then
    # prefix variable is set, and noprefix is disabled,
    # we set custom prefix
    if [[ $branchinprefix == 0 ]]; then
      commitmsg=$(echo '['$(echo $prefix)']' -)
    else
      commitmsg=$(echo '['$(echo $prefix $mainbranch)']' -)
    fi
  else
    if [[ $branchinprefix == 0 ]]; then
      commitmsg=$(echo '['$(echo $reponame)']' -)
    else
      commitmsg=$(echo '['$(echo $reponame $mainbranch)']' -)
    fi
  fi

  # should prefix use UPPERCASE CAHARCTERS?
  if [[ $uppercaseprefix == 1 ]]; then
    commitmsg=$(echo $commitmsg | tr '[:lower:]' '[:upper:]')
  fi

  if [[ $emoji == 1 ]]; then
    # add random emoji icon from .emo file
    file=$0
    file=${file%/*}
    file=$(echo $file/.emo)
    commitmsg=$(echo $commitmsg $(head -$((${RANDOM} % `wc -l < $file` + 1)) $file | tail -1))
  fi

  if [[ $1 ]]; then
    msg=$1
    # we have commit message!
    if [[ $1 == "-d" ]]; then
      msg=$3
    fi

    commitmsg=$(echo $commitmsg $msg)
    tempbranch=$(echo $mainbranch-$devsuffix)

    # commit
    git commit -m "$commitmsg"

    # if we don't have any errors on commiting (like github hooks that fails, etc)
    # we can push
    if [[ $? == 0 ]]; then

      if [[ $2 ]]; then
        GIT_COMMITTER_DATE="Mon $2 01:01 2015 +0100" git commit --amend --date "Mon $2 01:01 2015 +0100" -m "$commitmsg"
      fi

      if [[ $pushtotemp == 1 ]]; then
        git push origin $mainbranch:$tempbranch -f
      else
        git push origin $mainbranch -f
      fi

      if [[ $opencompare == 1 ]]; then
        if [[ $comparewith ]]; then
          tempbranch=$mainbranch
          mainbranch=$comparewith
        fi
        # and then open the browser so we can send a pull request
        open https://github.com/$author/$reponame/compare/$mainbranch...$tempbranch\?expand\=1
      fi

    else
      echo "Commit error"
    fi
  else
    echo "No commit message!"
  fi

else
  echo "ERROR: Not in git repository (.git not found!)"
fi
